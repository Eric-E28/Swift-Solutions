// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PopNGo.Models;

#nullable disable

namespace PopNGo.Migrations
{
    [DbContext(typeof(PopNGoDB))]
    [Migration("20240415222958_AddingItineraryTables")]
    partial class AddingItineraryTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ItineraryChecklist", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ItineraryDaySectionId")
                        .HasColumnType("int");

                    b.Property<string>("ItineraryHeader")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID")
                        .HasName("PK__ItineraryChecklist");

                    b.HasIndex("ItineraryDaySectionId");

                    b.ToTable("ItineraryChecklist");
                });

            modelBuilder.Entity("ItineraryChecklistItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItineraryChecklistId")
                        .HasColumnType("int");

                    b.HasKey("ID")
                        .HasName("PK__ItineraryChecklistItem");

                    b.HasIndex("ItineraryChecklistId");

                    b.ToTable("ItineraryChecklistItem");
                });

            modelBuilder.Entity("ItineraryDaySection", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("ItineraryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ItineraryTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ItineraryDaySection");
                });

            modelBuilder.Entity("PopNGo.Models.BookmarkList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id")
                        .HasName("PK__Bookmark__3214EC279FC7E8BA");

                    b.ToTable("BookmarkList");
                });

            modelBuilder.Entity("PopNGo.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApiEventId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ApiEventID");

                    b.Property<DateTime?>("EventDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EventDescription")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("EventImage")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EventLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EventName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("VenueName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("VenuePhoneNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("VenueRating")
                        .HasColumnType("decimal(2, 1)");

                    b.Property<string>("VenueWebsite")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Event__3214EC27ED3E79DC");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("PopNGo.Models.EventHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventId")
                        .HasColumnType("int")
                        .HasColumnName("EventID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<DateTime>("ViewedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__EventHis__3214EC27FF66CD7B");

                    b.HasIndex("EventId");

                    b.HasIndex("UserId");

                    b.ToTable("EventHistory");
                });

            modelBuilder.Entity("PopNGo.Models.FavoriteEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookmarkListId")
                        .HasColumnType("int")
                        .HasColumnName("BookmarkListID");

                    b.Property<int>("EventId")
                        .HasColumnType("int")
                        .HasColumnName("EventID");

                    b.HasKey("Id")
                        .HasName("PK__Favorite__3214EC27747DCC93");

                    b.HasIndex("BookmarkListId");

                    b.HasIndex("EventId");

                    b.ToTable("FavoriteEvents");
                });

            modelBuilder.Entity("PopNGo.Models.PgUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AspnetuserId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ASPNETUserID");

                    b.HasKey("Id")
                        .HasName("PK__PG_User__3214EC279DED8B11");

                    b.ToTable("PG_User");
                });

            modelBuilder.Entity("PopNGo.Models.ScheduledNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id")
                        .HasName("PK__Schedule__3214EC275E60BD46");

                    b.HasIndex("UserId");

                    b.ToTable("ScheduledNotification");
                });

            modelBuilder.Entity("PopNGo.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BackgroundColor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TextColor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Tag__3214EC27AD0223CA");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("PopNGo.Models.TicketLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventId")
                        .HasColumnType("int")
                        .HasColumnName("EventID");

                    b.Property<string>("Link")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Source")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__TicketLi__3214EC27A59A429E");

                    b.HasIndex("EventId");

                    b.ToTable("TicketLink");
                });

            modelBuilder.Entity("ItineraryChecklist", b =>
                {
                    b.HasOne("ItineraryDaySection", "ItineraryDaySection")
                        .WithMany("ItineraryChecklists")
                        .HasForeignKey("ItineraryDaySectionId")
                        .IsRequired()
                        .HasConstraintName("FK_ItineraryChecklist_ItineraryDaySectionId");

                    b.Navigation("ItineraryDaySection");
                });

            modelBuilder.Entity("ItineraryChecklistItem", b =>
                {
                    b.HasOne("ItineraryChecklist", "ItineraryChecklist")
                        .WithMany("ItineraryChecklistItems")
                        .HasForeignKey("ItineraryChecklistId")
                        .IsRequired()
                        .HasConstraintName("FK_ItineraryChecklistItem_ItineraryChecklist");

                    b.Navigation("ItineraryChecklist");
                });

            modelBuilder.Entity("PopNGo.Models.EventHistory", b =>
                {
                    b.HasOne("PopNGo.Models.Event", "Event")
                        .WithMany("EventHistories")
                        .HasForeignKey("EventId")
                        .IsRequired()
                        .HasConstraintName("FK_EventHistory_EventID");

                    b.HasOne("PopNGo.Models.PgUser", "User")
                        .WithMany("EventHistories")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_EventHistory_UserID");

                    b.Navigation("Event");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PopNGo.Models.FavoriteEvent", b =>
                {
                    b.HasOne("PopNGo.Models.BookmarkList", "BookmarkList")
                        .WithMany("FavoriteEvents")
                        .HasForeignKey("BookmarkListId")
                        .IsRequired()
                        .HasConstraintName("FK_FavoriteEvents_BookmarkListID");

                    b.HasOne("PopNGo.Models.Event", "Event")
                        .WithMany("FavoriteEvents")
                        .HasForeignKey("EventId")
                        .IsRequired()
                        .HasConstraintName("FK_FavoriteEvents_EventID");

                    b.Navigation("BookmarkList");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("PopNGo.Models.ScheduledNotification", b =>
                {
                    b.HasOne("PopNGo.Models.PgUser", "User")
                        .WithMany("ScheduledNotifications")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_ScheduledNotification_UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PopNGo.Models.TicketLink", b =>
                {
                    b.HasOne("PopNGo.Models.Event", "Event")
                        .WithMany("TicketLinks")
                        .HasForeignKey("EventId")
                        .IsRequired()
                        .HasConstraintName("FK_TicketLink_EventID");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("ItineraryChecklist", b =>
                {
                    b.Navigation("ItineraryChecklistItems");
                });

            modelBuilder.Entity("ItineraryDaySection", b =>
                {
                    b.Navigation("ItineraryChecklists");
                });

            modelBuilder.Entity("PopNGo.Models.BookmarkList", b =>
                {
                    b.Navigation("FavoriteEvents");
                });

            modelBuilder.Entity("PopNGo.Models.Event", b =>
                {
                    b.Navigation("EventHistories");

                    b.Navigation("FavoriteEvents");

                    b.Navigation("TicketLinks");
                });

            modelBuilder.Entity("PopNGo.Models.PgUser", b =>
                {
                    b.Navigation("EventHistories");

                    b.Navigation("ScheduledNotifications");
                });
#pragma warning restore 612, 618
        }
    }
}
